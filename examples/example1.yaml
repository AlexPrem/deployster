plugs:
  gcloud:
    path: {{ gcloud_path }}
    read_only: false

resources:

  project:
    type: infolinks/deployster-gcp-project:0.0.0
    config:
      project_id: {{ gcp_project }}
      organization_id: {{ organization_id }}
      billing_account_id: {{ billing_account_id }}

  apps-ip-address:
    type: infolinks/deployster-gcp-compute-regional-ip-address:0.0.0
    dependencies:
      project: project
    config:
      name: apps-load-balancer
      region: {{ region }}

  apps-cluster:
    type: infolinks/deployster-gcp-gke-cluster:0.0.0
    dependencies:
      project: project
    config:
      zone: {{ zone }}
      name: apps
      description: Applications cluster.
      version: 1.8.2-gke.0
      node_pools:
        # Nodes for the web traffic load balancer
        - name: load-balancer
          min_size: 1
          max_size: 1
          preemptible: true
          tags:
            - apps-load-balancer
          labels:
            role: load-balancer
        # Nodes for edge systems (ad-server, static resources, etc)
        - name: edge
          min_size: 1
          max_size: 1
          preemptible: true
          tags:
            - apps-edge
          labels:
            role: edge
        # Nodes for backoffice systems (insight, central, etc)
        - name: backoffice
          min_size: 1
          max_size: 1
          preemptible: true
          tags:
            - apps-backoffice
          labels:
            role: backoffice

  cluster-admin-role:
    type: infolinks/deployster-k8s-rbac-role:0.0.0
    readonly: true
    dependencies:
      cluster: apps-cluster
    config:
      manifest:
        metadata:
          name: cluster-admin
        rules:
          - apiGroups:
            - '*'
            resources:
            - '*'
            verbs:
            - '*'
          - nonResourceURLs:
            - '*'
            verbs:
            - '*'

  team-cluster-admins-binding:
    type: infolinks/deployster-k8s-rbac-role-binding:0.0.0
    dependencies:
      role: cluster-admin-role
    config:
      manifest:
        metadata:
          name: team-cluster-admins
        subjects:
          - kind: User
            name: arik@infolinks.com
          - kind: User
            name: jack@infolinks.com

  example-namespace:
    type: infolinks/deployster-k8s-namespace:0.0.0
    dependencies:
      cluster: apps-cluster
    config:
      manifest:
        metadata:
          name: example

  example-role:
    type: infolinks/deployster-k8s-rbac-role:0.0.0
    dependencies:
      namespace: example-namespace
    config:
      manifest:
        metadata:
          name: example
        rules:
          - apiGroups:
            - '*'
            resources:
            - '*'
            verbs:
            - 'get'

  example-service-account:
    type: infolinks/deployster-k8s-rbac-service-account:0.0.0
    dependencies:
      namespace: example-namespace
    config:
      manifest:
        metadata:
          name: example

  example-role-binding:
    type: infolinks/deployster-k8s-rbac-role-binding:0.0.0
    dependencies:
      role: example-role
    config:
      manifest:
        metadata:
          name: example
        subjects:
          - kind: ServiceAccount
            name: example
            namespace: example

  example-configmap:
    type: infolinks/deployster-k8s-configmap:0.0.0
    dependencies:
      namespace: example-namespace
    config:
      manifest:
        metadata:
          name: example
        data:
          key1: value1
          key3: value3

  example-secret:
    type: infolinks/deployster-k8s-secret:0.0.0
    dependencies:
      namespace: example-namespace
    config:
      manifest:
        metadata:
          name: example
        data:
          key1: value1
          key3: value3

  example-deployment:
    type: infolinks/deployster-k8s-deployment:0.0.0
    dependencies:
      namespace: example-namespace
      secret: example-secret
    config:
      manifest:
        metadata:
          name: example
          labels:
            test2: abcd
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: nginx
          template:
            metadata:
              labels:
                app: nginx
            spec:
              volumes:
                - name: secret-volume
                  secret:
                    secretName: example
              containers:
                - name: nginx
                  image: nginx:1.10
                  volumeMounts:
                    - name: secret-volume
                      mountPath: /my-secret

  example-service:
    type: infolinks/deployster-k8s-service:0.0.0
    dependencies:
      namespace: example-namespace
      deployment: example-deployment
      address: apps-ip-address
    config:
      manifest:
        metadata:
          name: example
        spec:
          selector:
            app: nginx
          ports:
            - name: http
              port: 80
              targetPort: 80
          type: LoadBalancer              # creates a Google TCP Load Balancer
          externalTrafficPolicy: Local    # this preserves the client IP (otherwise target pod won't see it)

  example-ingress:
    type: infolinks/deployster-k8s-ingress:0.0.0
    dependencies:
      namespace: example-namespace
      deployment: example-deployment
    config:
      manifest:
        metadata:
          name: example
          annotations:
            kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: "true"
        spec:
          rules:
          - host: example.deployster.com
            http:
              paths:
                - backend:
                    serviceName: echoserver
                    servicePort: 80
